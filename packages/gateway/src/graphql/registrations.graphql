type Registration {
  id: ID # long uuid
  trackingID: String # short uuid easy to remember
  registrationNumber: String # BRN (Birth Registration Number) - Format to be decided
  registrationData: [ RegistrationData ]
  updatedAt: Date
}

type Reason {
  id: ID
  type: String
  message: String
}

type RegistrationData {
  id: ID
  registrationId: ID
  createdAt: Date
  status: String #notified, declared, validated, certified
  data: {
    child: Person
    mother: Person
    father: Person
    informant: Person
    attachments: [Attachment]
    location: location

    paperFormID: String #assumption based on "Number of the application (5 digit) ???"
    # form stuff
  }
}

type HumanName {
  use: String # traditional (Bangla) or English
  value: String
  period: { Period } # Time period when id is/was valid for use
}

type Person {
  id: ID
  identifier: [Identifier]
  name:[HumanName]
  telecom: [ContactPoint]
  gender: String,
  birthDate: Date
  address : [Address]
  photo : { Attachment }
}

type Attachment {
  id: ID # uuid
  data: String # base64
  status: String # approved/validated deleted
  originalFileName: String
  systemFileName: String
  # rest of the stuff
  createdAt: Date
}


type Query {
  getRegistrations(userID:): [Registrations]
  createRegistration(Registration): ID
  updateRegistration(id: Int!)
  voidRegistration(id: Int!, reason:Reason)
}

